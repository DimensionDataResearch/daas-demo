// <auto-generated />
using DaaSDemo.Data;
using DaaSDemo.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DaaSDemo.Api.Migrations
{
    [DbContext(typeof(Entities))]
    [Migration("20171025194858_AddressMappingLength")]
    partial class AddressMappingLength
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DaaSDemo.Data.Models.DatabaseInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DatabasePassword")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("DatabaseServerId");

                    b.Property<string>("DatabaseUser")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("DatabaseServerId");

                    b.HasIndex("Name");

                    b.ToTable("DatabaseInstance");
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.DatabaseServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Action");

                    b.Property<string>("AdminPassword")
                        .IsRequired();

                    b.Property<string>("IngressIP");

                    b.Property<int?>("IngressPort");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("TenantId");

                    b.ToTable("DatabaseServer");
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.IPAddressMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExternalIP")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("InternalIP")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("ExternalIP");

                    b.HasIndex("InternalIP");

                    b.ToTable("IPAddressMappings");
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DatabaseServerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("DatabaseServerId");

                    b.HasIndex("Name");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.DatabaseInstance", b =>
                {
                    b.HasOne("DaaSDemo.Data.Models.DatabaseServer", "DatabaseServer")
                        .WithMany("Databases")
                        .HasForeignKey("DatabaseServerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.DatabaseServer", b =>
                {
                    b.HasOne("DaaSDemo.Data.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DaaSDemo.Data.Models.Tenant", b =>
                {
                    b.HasOne("DaaSDemo.Data.Models.DatabaseServer", "DatabaseServer")
                        .WithMany()
                        .HasForeignKey("DatabaseServerId");
                });
#pragma warning restore 612, 618
        }
    }
}
